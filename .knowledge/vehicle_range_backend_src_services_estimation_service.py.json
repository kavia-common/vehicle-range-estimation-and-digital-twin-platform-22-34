{"is_source_file": true, "format": "Python", "description": "This file defines an EstimationService class providing vehicle range estimation based on energy consumption and efficiency adjustments, including internal calculation methods and a public estimate method.", "external_files": ["src.domain.schemas"], "external_methods": [], "published": ["EstimationService"], "classes": [{"name": "EstimationService", "description": "Provides range estimation calculations for electric vehicles with methods for efficiency adjustment and range estimation."}], "methods": [{"name": "float _efficiency_adjustment(self, speed_kmh: float, temperature_c: float, wind_kmh: float)", "description": "Calculates efficiency adjustment based on speed, temperature, and wind conditions.", "scope": "EstimationService", "scopeKind": "class"}, {"name": "RangeEstimateResponse estimate(self, req: RangeEstimateRequest)", "description": "Public method to estimate vehicle range based on provided request data.", "scope": "EstimationService", "scopeKind": "class"}], "calls": ["self._efficiency_adjustment", "req.vehicle", "req.telemetry", "RangeEstimateResponse"], "search-terms": ["EstimationService", "range estimation", "efficiency adjustment", "vehicle range", "electric vehicle estimation", "src.domain.schemas"], "state": 2, "file_id": 18, "knowledge_revision": 38, "git_revision": "", "ctags": [{"_type": "tag", "name": "EstimationService", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/estimation_service.py", "pattern": "/^class EstimationService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_efficiency_adjustment", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/estimation_service.py", "pattern": "/^    def _efficiency_adjustment(self, speed_kmh: float, temperature_c: float, wind_kmh: float) ->/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self, speed_kmh: float, temperature_c: float, wind_kmh: float)", "scope": "EstimationService", "scopeKind": "class"}, {"_type": "tag", "name": "estimate", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/estimation_service.py", "pattern": "/^    def estimate(self, req: RangeEstimateRequest) -> RangeEstimateResponse:$/", "language": "Python", "typeref": "typename:RangeEstimateResponse", "kind": "member", "signature": "(self, req: RangeEstimateRequest)", "scope": "EstimationService", "scopeKind": "class"}], "hash": "7d6fd746949e4b9980910c1592bb589b", "format-version": 4, "code-base-name": "vehicle_range_backend", "filename": "vehicle_range_backend/src/services/estimation_service.py", "revision_history": [{"38": ""}]}