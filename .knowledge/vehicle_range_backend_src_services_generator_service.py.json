{"is_source_file": true, "format": "Python", "description": "This file defines the GeneratorService class which generates deterministic synthetic telemetry data for vehicle scenarios such as urban, highway, and mixed. It includes methods to produce time series data points with attributes like speed, temperature, wind, and state of charge, and optionally exports the data to a CSV file.", "external_files": ["src.core.config", "src.domain.schemas"], "external_methods": ["get_settings", "ensure_data_dirs"], "published": ["GeneratorService"], "classes": [{"name": "GeneratorService", "description": "A service class for generating deterministic synthetic vehicle telemetry data."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the GeneratorService, ensuring data directories are set up and defining export directory.", "scope": "GeneratorService", "scopeKind": "class"}, {"name": "Tuple[float,float,float,float] _profile(self, scenario: str, t: int, rng: random.Random)", "description": "Generates a single telemetry profile for a given scenario and time step, returning speed, temperature, wind, and SOC.", "scope": "GeneratorService", "scopeKind": "class"}, {"name": "SyntheticDataResponse generate(self, req: SyntheticDataRequest)", "description": "Main method to generate a time series of telemetry data points, with optional CSV export.", "scope": "GeneratorService", "scopeKind": "class"}], "calls": ["os.path.abspath", "get_settings", "ensure_data_dirs", "os.path.join", "random.Random", "rng.random", "max", "uuid.uuid4", "open", "csv.writer"], "search-terms": ["GeneratorService", "synthetic telemetry", "vehicle scenario", "generate telemetry", "CSV export", "scenarios urban highway mixed"], "state": 2, "file_id": 22, "knowledge_revision": 46, "git_revision": "", "ctags": [{"_type": "tag", "name": "GeneratorService", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/generator_service.py", "pattern": "/^class GeneratorService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/generator_service.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "GeneratorService", "scopeKind": "class"}, {"_type": "tag", "name": "_profile", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/generator_service.py", "pattern": "/^    def _profile(self, scenario: str, t: int, rng: random.Random) -> Tuple[float, float, float, /", "language": "Python", "typeref": "typename:Tuple[float,float,float,float]", "kind": "member", "signature": "(self, scenario: str, t: int, rng: random.Random)", "scope": "GeneratorService", "scopeKind": "class"}, {"_type": "tag", "name": "generate", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/generator_service.py", "pattern": "/^    def generate(self, req: SyntheticDataRequest) -> SyntheticDataResponse:$/", "language": "Python", "typeref": "typename:SyntheticDataResponse", "kind": "member", "signature": "(self, req: SyntheticDataRequest)", "scope": "GeneratorService", "scopeKind": "class"}], "hash": "d4fe5f9f229c86f011cb684e64c39904", "format-version": 4, "code-base-name": "vehicle_range_backend", "filename": "vehicle_range_backend/src/services/generator_service.py", "revision_history": [{"46": ""}]}