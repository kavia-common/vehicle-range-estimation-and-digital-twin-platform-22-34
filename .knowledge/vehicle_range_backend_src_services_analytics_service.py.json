{"is_source_file": true, "format": "Python", "description": "This file defines the AnalyticsService class which performs basic analytics computations such as mean, standard deviation, trend analysis, and anomaly detection on efficiency history data for vehicles. It implements a public method `run` that processes an AnalyticsRequest and returns an AnalyticsResponse with computed metrics.", "external_files": ["src.domain.schemas"], "external_methods": [], "published": ["AnalyticsService"], "classes": [{"name": "AnalyticsService", "description": "Service class for computing vehicle efficiency analytics, trend analysis, and anomalies."}], "methods": [{"name": "float _mean(self, xs: List[float])", "description": "Calculate average of a list of floats.", "scope": "AnalyticsService", "scopeKind": "class"}, {"name": "float _std(self, xs: List[float], mean: float)", "description": "Calculate standard deviation of a list of floats given its mean.", "scope": "AnalyticsService", "scopeKind": "class"}, {"name": "(float,float) _trend(self, xs: List[float])", "description": "Compute the linear trend (slope and intercept) over efficiency data.", "scope": "AnalyticsService", "scopeKind": "class"}, {"name": "AnalyticsResponse run(self, req: AnalyticsRequest)", "description": "Public interface to compute various analytics metrics, detect anomalies, and return results encapsulated in AnalyticsResponse.", "scope": "AnalyticsService", "scopeKind": "class"}], "calls": ["sum", "sum", "sum", "sum", "sum", "max", "min"], "search-terms": ["AnalyticsService", "analytics", "efficiency_history_km_per_kwh", "trend", "anomalies", "degradation"], "state": 2, "file_id": 21, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "AnalyticsService", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/analytics_service.py", "pattern": "/^class AnalyticsService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_mean", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/analytics_service.py", "pattern": "/^    def _mean(self, xs: List[float]) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self, xs: List[float])", "scope": "AnalyticsService", "scopeKind": "class"}, {"_type": "tag", "name": "_std", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/analytics_service.py", "pattern": "/^    def _std(self, xs: List[float], mean: float) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self, xs: List[float], mean: float)", "scope": "AnalyticsService", "scopeKind": "class"}, {"_type": "tag", "name": "_trend", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/analytics_service.py", "pattern": "/^    def _trend(self, xs: List[float]) -> (float, float):$/", "language": "Python", "typeref": "typename:(float,float)", "kind": "member", "signature": "(self, xs: List[float])", "scope": "AnalyticsService", "scopeKind": "class"}, {"_type": "tag", "name": "run", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/analytics_service.py", "pattern": "/^    def run(self, req: AnalyticsRequest) -> AnalyticsResponse:$/", "language": "Python", "typeref": "typename:AnalyticsResponse", "kind": "member", "signature": "(self, req: AnalyticsRequest)", "scope": "AnalyticsService", "scopeKind": "class"}], "hash": "eb78c4645d4c6063f73ec90e047db6fd", "format-version": 4, "code-base-name": "vehicle_range_backend", "filename": "vehicle_range_backend/src/services/analytics_service.py", "revision_history": [{"44": ""}]}