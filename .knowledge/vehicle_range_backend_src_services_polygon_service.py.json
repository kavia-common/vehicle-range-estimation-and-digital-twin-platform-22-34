{"is_source_file": true, "format": "Python", "description": "This file defines a PolygonService class providing geospatial polygon utilities, including methods for creating circles approximated as polygons and computing convex hulls from a set of points. It also contains internal utility functions for handling GeoJSON formatting and coordinate offset calculations.", "external_files": ["src.domain.schemas"], "external_methods": [], "published": ["PolygonService"], "classes": [{"name": "PolygonService", "description": "A utility class for geospatial polygon operations such as generating circles and convex hulls."}], "methods": [{"name": "Tuple[float,float] _offset(self, lat: float, lon: float, dx_m: float, dy_m: float)", "description": "Calculates a new geographic coordinate offset from the original point by specified meters in x and y directions, accounting for Earth's curvature.", "scope": "PolygonService", "scopeKind": "class"}, {"name": "PolygonResponse circle(self, req: CircleRequest)", "description": "Creates a GeoJSON polygon approximating a circle centered at given coordinates with specified radius and number of points.", "scope": "PolygonService", "scopeKind": "class"}, {"name": "PolygonResponse convex_hull(self, req: PolygonRequest)", "description": "Computes the convex hull of a set of geographic points using the monotone chain algorithm.", "scope": "PolygonService", "scopeKind": "class"}, {"name": "List[List[List[float]]] _to_ring(coords: List[Tuple[float, float]])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cross(o, a, b)", "scope": "PolygonService.convex_hull", "scopeKind": "member", "description": "unavailable"}], "calls": ["math.pi", "math.cos", "math.radians", "_to_ring", "self._offset"], "search-terms": ["PolygonService", "convex_hull", "circle", "GeoJSON", "_offset", "geospatial", "polygon"], "state": 2, "file_id": 19, "knowledge_revision": 40, "git_revision": "", "ctags": [{"_type": "tag", "name": "EARTH_RADIUS_M", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^EARTH_RADIUS_M = 6371000.0$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PolygonService", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^class PolygonService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_offset", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^    def _offset(self, lat: float, lon: float, dx_m: float, dy_m: float) -> Tuple[float, float]:$/", "language": "Python", "typeref": "typename:Tuple[float,float]", "kind": "member", "signature": "(self, lat: float, lon: float, dx_m: float, dy_m: float)", "scope": "PolygonService", "scopeKind": "class"}, {"_type": "tag", "name": "_to_ring", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^def _to_ring(coords: List[Tuple[float, float]]) -> List[List[List[float]]]:$/", "language": "Python", "typeref": "typename:List[List[List[float]]]", "kind": "function", "signature": "(coords: List[Tuple[float, float]])"}, {"_type": "tag", "name": "circle", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^    def circle(self, req: CircleRequest) -> PolygonResponse:$/", "language": "Python", "typeref": "typename:PolygonResponse", "kind": "member", "signature": "(self, req: CircleRequest)", "scope": "PolygonService", "scopeKind": "class"}, {"_type": "tag", "name": "convex_hull", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^    def convex_hull(self, req: PolygonRequest) -> PolygonResponse:$/", "language": "Python", "typeref": "typename:PolygonResponse", "kind": "member", "signature": "(self, req: PolygonRequest)", "scope": "PolygonService", "scopeKind": "class"}, {"_type": "tag", "name": "cross", "path": "/home/kavia/workspace/code-generation/vehicle-range-estimation-and-digital-twin-platform-22-34/vehicle_range_backend/src/services/polygon_service.py", "pattern": "/^        def cross(o, a, b):$/", "file": true, "language": "Python", "kind": "function", "signature": "(o, a, b)", "scope": "PolygonService.convex_hull", "scopeKind": "member"}], "hash": "52491c83294eca56f8586ec0448d027a", "format-version": 4, "code-base-name": "vehicle_range_backend", "filename": "vehicle_range_backend/src/services/polygon_service.py", "fields": [{"name": "EARTH_RADIUS_M = 6371000.0", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"40": ""}]}